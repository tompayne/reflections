How did viewing a diff between two versions of a file help you see the bug that
was introduced?

- It only showed those lines that changed, making it easier to locate what had changes

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    -You can see your progress, are you getting better?
    -You might be able to reuse something you've done in the past.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    -A pro is that you decide when to make the commit, at a logical point
    -Con, perhaps you forget to manually commit
    -Pro, you do commit anytime

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    -Because one file may be referencing or impacting parts of another file

How can you use the commands git log and git diff to view the history of files?

    -git log shows you all the commits
    -git diff compares the changes from one commit to the other

How might using version control make you more confident to make changes that
could break something?

    -you can alwys go back to a previois version to see where a bug was introduced

Now that you have your workspace set up, what do you want to try using Git for?

    -creating a project and start using it

 How can you use the commands git log and git diff to view the history of files?

    -You can view the log, then use diff to view the changes

